#!/usr/bin/python
# vim: set softtabstop=2 ts=2 sw=2 expandtab: 
import os,subprocess,inspect,sys
from subprocess import call

cmd_folder = os.path.realpath(os.path.abspath(os.path.split(inspect.getfile( inspect.currentframe() ))[0])) + '/lib'
if cmd_folder not in sys.path:
  sys.path.insert(0, cmd_folder)

# Potentially we only want to filter on a subset of devices, allow arguments to be
# The list of drives to care about? 
from gmetric import get_gmetrics

# Load the gmetric channels
gmetrics = get_gmetrics('/etc/ganglia/gmond.conf')
hostname = call(["hostname","--fqdn"])
spoof = "%s:%s" % (hostname,hostname)

# Run IOstat to get data
iostat_cmd = 'iostat -d -x -k 10 2 | tail -n +4'
iostat_run = subprocess.Popen(iostat_cmd,stdout=subprocess.PIPE,shell=True)
(out,err) = iostat_run.communicate()

output_lines = out.split("\n")
live_data = False
aggregate = {}

for i in range(len(output_lines)):
 # Only count data past first 'Device:'
 if live_data == True and len(output_lines[i]) > 1 :
  metric = output_lines[i].split()
  device = metric[0]
  for i in range(len(metric[1:])):
    if aggregate.has_key(headers[i+1]) == False:
      aggregate[headers[i+1]] = float()
    aggregate[headers[i+1]] = float(metric[i+1]) + float(aggregate[headers[i+1]])
    if name == 'util':
      units = 'Percent'
    elif name == 'await':
      units = 'Milliseconds'
    else:
      units = 'Kilobytes'
    for gmetric in gmetrics:
      gmetric.send(device+ '_' +headers[i+1],float(metric[i+1]),TYPE='float',UNITS=units,SPOOF=spoof,GROUP='disk')
 elif 'Device:' in output_lines[i]:
  live_data = True
  headers = output_lines[i].replace('%','').replace('/','').split()

for name in aggregate.iterkeys():
  if name == 'util':
    units = 'Percent'
  elif name == 'await':
    units = 'Milliseconds'
  else:
    units = 'Kilobytes'
  for gmetric in gmetrics:
    gmetric.send('total_' +name,aggregate[name],TYPE='float',UNITS=units,SPOOF=spoof,GROUP='disk')
